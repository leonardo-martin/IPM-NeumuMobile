require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

$min_ios_version_supported = 12.4

platform :ios, $min_ios_version_supported
install! 'cocoapods', :deterministic_uuids => false
production = ENV["PRODUCTION"] == "1"

target 'TeleNeuMu' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :production => production,
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => FlipperConfiguration.enabled(["Debug"], { 'Flipper' => '0.164.0' }),
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'TeleNeuMuTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(installer)
    flipper_post_install(installer)
  
    installer.aggregate_targets.each do |aggregate_target|
      aggregate_target.user_project.native_targets.each do |target|
        target.build_configurations.each do |config|
          # Arch selection is needed to work across M1/Intel macs, became necessary when App Check was added
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = ''
        end
      end
      aggregate_target.user_project.save
    end
    
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end
    
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    # Force pods to match minimum iOS version for React Native
    # Fixes build issue on Xcode Cloud where some pods
    # Use iOS 12 calls despite being set as iOS 11
    def __apply_Xcode_14_3_RC_post_install_workaround(installer)
      installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
          minimum_target = $min_ios_version_supported
          config.build_settings['SWIFT_VERSION'] = '5.0'
          if current_target.to_f < minimum_target.to_f
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = minimum_target
          end
        end
      end
    end
    
  end
end

target 'OneSignalNotificationServiceExtension' do
  pod 'OneSignalXCFramework', '>= 3.0', '< 4.0'
end